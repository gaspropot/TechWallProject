@model TechWall.Entities.Product

@{
    ViewBag.Title = "Edit";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Product edit</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Dashboard")">Admin</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index","Product")">Products</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Product Edit</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <div class="form-horizontal">
                        <h4>Product</h4>
                        <hr />
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)

                            <div class="form-group row">
                                @Html.LabelFor(model => model.BrandID, "BrandID", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">


                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                                <div class="col-sm-10">

                                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                                </div>

                            </div>




                            <div class="form-group row">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.isFeatured, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.isFeatured)
                                        @Html.ValidationMessageFor(model => model.isFeatured, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                            </div>

                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h4>Images</h4>
                    <hr />
                    <div class="form-horizontal">

                        <div class="table-responsive">
                            <table class="table table-bordered table-stripped">
                                <thead>
                                    <tr>
                                        <th>
                                            Image preview
                                        </th>
                                        <th>
                                            Image url
                                        </th>

                                        <th>
                                            Actions
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var picture in Model.Pictures)
                                    {
                                        <tr>
                                            <td>
                                                <img src="@Url.Content(picture.URL)" class="image" style="height:50px">
                                            </td>
                                            <td>
                                                <input type="text" class="form-control" disabled value="@Url.Content(picture.URL)">
                                            </td>

                                            <td>
                                                <form style="display: block" action="@Url.Action("DeletePicture",new { pictureid = picture.ID,productId=Model.ID })" method="post">
                                                    @Html.AntiForgeryToken()
                                                    <button class="btn btn-default bg-transparent" type="submit"><i class="fa fa-trash"></i></button>
                                                </form>
                                            </td>
                                        </tr>
                                    }


                                </tbody>
                            </table>
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h4>Add more Images</h4>
                    <hr />


                    <div class="ibox-content">

                        <form action="~/Product/SaveMultiple?productId=@Model.ID" class="dropzone" enctype="multipart/form-data" id="dropzoneForm" method="post">
                            <div class="fallback">
                                <input name="file" type="file" multiple />
                                <input type="submit" value="Upload" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles {
    @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
    @Styles.Render("~/plugins/summernoteStyles")

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/dropZone")
    @Scripts.Render("~/plugins/summernote")

    <script type="text/javascript">
        $(document).ready(function () {

            $('#Description').summernote({
                toolbar: [
                    // [groupName, [list of button]]
                    ['style', ['bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']]
                ]
            });

            Dropzone.autoDiscover = false;
            $("#dropzoneForm").dropzone({
                 addRemoveLinks: true,
                success: function (file, response) {
                    var imgName = response;
                    file.previewElement.classList.add("dz-success");
                    console.log('Successfully uploaded : ' + imgName);
                },
                error: function (file, response) {
                    file.previewElement.classList.add("dz-error");

                }
                });
            //Dropzone.options.imgUpload = {

            //    //prevents Dropzone from uploading dropped files immediately
            //    autoProcessQueue: false,
            //    autoDiscover: false,
            //    init: function () {
            //        var submitButton = document.querySelector("#submit-all");
            //        var myDropzone = this; //closure
            //        alert('FFF');
            //        submitButton.addEventListener("click", function () {

            //            //tell Dropzone to process all queued files
            //            myDropzone.processQueue();

            //            this.on('completemultiple', function () {
            //                location.reload();
            //            })

            //        });

            //    }
            //        };


        });

    </script>
}
